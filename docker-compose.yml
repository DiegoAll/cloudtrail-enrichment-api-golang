version: '3.8'

services:
  db_postgres:
    hostname: auth_db
    build:
      context: ./database/postgresql 
      dockerfile: Dockerfile.postgresql
    container_name: authentication_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: authdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      # - ./db-data/postgres_data:/bitnami/postgresql/:rw
      - ./db-data/postgres:/var/lib/postgresql/data:rw

  db_mongo:
    hostname: enrich_api_db
    build:
      context: ./database/mongo
      dockerfile: Dockerfile.mongo
    container_name: enrichment_api_db
    ports:
      - "27017:27017" 
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    volumes:
      # Bind mount para persistir los datos de MongoDB en tu host
      - ./db-data/mongo_data:/data/db:rw

  api:
    hostname: enrich_api
    build:
      context: .
      dockerfile: Dockerfile
    container_name: enrichment_api
    ports:
      - "9090:9090"
    environment:
      PORT: 9090
      MONGO_PORT: 27017
      MONGO_HOST: enrich_api_db
      MONGO_DATABASE: ${MONGO_DATABASE}
      MONGO_COLLECTION: enriched_events
      MONGO_DB_TIMEOUT: ${MONGO_DB_TIMEOUT}
      MONGO_USERNAME: ${MONGO_USERNAME}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: 5432
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_SSLMODE: disable
      DB_TIMEOUT: 5000000000
      MAX_OPEN_CONNS: 100

      JWT_SECRET: ${JWT_SECRET}
      TOKEN_DURATION: 86400000000000
      # HASH_COST: 10
      SCOPE: prod
      # SCOPE: test
    depends_on:
      - db_mongo
      - db_postgres